@{
    ViewData["Title"] = "Pembayaran";
    ViewData["Header"] = "2";
    ViewData["Footer"] = "3";
    ViewData["HeaderName"] = "Konfirmasi Pesanan";

}

<style>
    .payment-channel-list {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .channel-card {
        position: relative;
        border: 2px solid transparent;
        border-radius: 12px;
        padding: 0rem;
        background: #fff;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        transition: all 0.1s ease-in-out;
        flex: 1 1 150px;
        text-align: center;
        cursor: pointer;
    }

    .channel-card:hover {
        border-color: #0d6efd;
        box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.2);
    }

    .channel-card input[type="radio"]:checked + .channel-content {
        border: 2px solid #0d6efd;
        border-radius: 8px;
        padding: 2px;
        background-color: #f0f8ff;
    }

    .channel-content {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 80px;
        border-radius: 8px;
        transition: 0.1s;
    }

    .channel-content img {
        max-height: 60px;
        max-width: 100px;
        object-fit: contain;
    }
</style>

<div class="container mt-4">
    <div class="text-center mb-4">
        <img src="~/img/Layanan/cekOrderan.png" alt="Konfirmasi Pesanan" style="max-width: 180px;" class="mb-0" />
        <h2 class="fw-bold">Konfirmasi Pesanan</h2>
        <p class="text-muted">Silakan cek kembali detail pesanan Anda sebelum melakukan pembayaran.</p>
        <span id="IdPesanan"></span>
    </div>
    <strong>Informasi Customer</strong>
    <div class="card position-relative shadow-sm border-0">
        <!-- Tombol Edit Stylish di pojok kanan atas -->
        <button
            class="btn btn-light border rounded-circle position-absolute d-flex align-items-center justify-content-center"
            style="top: 10px; right: 10px; width: 36px; height: 36px;" onclick="editCustomer();" title="Edit Informasi">
            <i class="bi bi-pencil-fill text-primary"></i>
        </button>

        <!-- Konten Card -->
        <div class="card-body">
            <dl class="row mb-0" id="Customer">
                <!-- Data customer akan dimuat di sini -->
            </dl>
        </div>
    </div>
    <hr class="" style="border-top: 2px dashed #bbb;">
    <div class="d-flex justify-content-between align-items-center mb-2 position-relative">
        <strong>Informasi Pemesanan Jasa</strong>
        <button class="btn btn-light border rounded-circle d-flex align-items-center justify-content-center"
            style="width: 36px; height: 36px;" onclick="editLayanan()" title="Edit Informasi">
            <i class="bi bi-pencil-fill text-primary"></i>
        </button>
    </div>
    <hr class="" style="border-top: 2px dashed #bbb;">
    <strong>Keluhan untuk direparasi</strong>
    <ul class="list-group mb-3" id="Keluhan">
    </ul>
    <hr class="" style="border-top: 2px dashed #bbb;">
    <strong>Jenis Properti</strong>
    <ul class="list-group mb-3" id="Properti">
    </ul>
    <hr class="" style="border-top: 2px dashed #bbb;">
    <strong>Layanan yang diinginkan</strong>

    <ul class="list-group mb-3" id="ListLayanan">
    </ul>
    <ul class="list-group mb-3" id="">
        <li class="list-group-item d-flex justify-content-between align-items-center py-2 position-relative">
            <div class="d-flex align-items-center">
                <div class="fw-semibold">Total Pembayaran</div>
            </div>
            <div class="text-end">
                <div class="text-primary fw-bold">
                    <div id="Total">
                    </div>
                </div>
            </div>
        </li>
    </ul>

    <p><strong>Catatan:</strong> Pastikan unit AC dalam kondisi mati sebelum teknisi datang.</p>
    <strong>Metode Pembayaran</strong>
        <div class="position-relative mb-4 mt-2">
            <input class="form-control ps-5 pe-5 shadow-sm rounded-pill" type="text" placeholder="Cari"
                id="searchInput">
            <i class="bi bi-search position-absolute top-50 start-0 translate-middle-y ms-3 text-muted"></i>
            <button type="button"
                class="btn btn-light btn-sm rounded-circle shadow-sm position-absolute top-50 end-0 translate-middle-y me-2"
                onclick="GetChannelPembayaran()" title="Segarkan">
                <i class="bi bi-arrow-clockwise text-primary"></i>
            </button>
        </div>
    <div class="accordion mt-4 mb-30" id="channelAccordion">
    </div>

</div>

<!-- Footer -->
<div class="gobo-custom-footer gobo-shadow fixed-bottom m-0 px-2 py-2 text-center">
    <div class="container p-0">
        <div class="row">
            <div class="col">
                <button class="save-btn w-100 fw-4 h_40 br-8" onclick="SimpanDulu();" id="btnSimpanDulu">
                    <i class="bi bi-heart me-2"></i>
                    Simpan Dulu
                </button>
            </div>
            <div class="col" style="display: none;" id="btnCheckout">
                <button class="main-btn btn-hover w-100 fw-4 h_40 br-8" onclick="Checkout();">
                    <i class="bi bi-credit-card me-2"></i>
                    Bayar
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Footer End -->

<script>
    var $;

    document.addEventListener('DOMContentLoaded', function () {
        if (typeof window.jQuery === 'undefined') {
            console.error('jQuery is not loaded.');
            return;
        }
        $ = window.jQuery;
        var data = getStoragePemesanan();
        
        if (
            data.Keranjang == null ||
            data.JenisProperti == null ||
            data.Keluhan == null ||
            data.TanggalKunjungan == "" ||
            data.JamKunjungan == "" ||
            data.Total == null ||
            data.Customer == null || data.Id == null
        ) {
            alert("session Order expired");
            window.location.href = '@Url.Action("Index", "Home")';
        }
        
        var customer = `
            <dt class="col-sm-4">Nama</dt>
            <dd class="col-sm-8">${data.Customer.nama}</dd>

            <dt class="col-sm-4">Nomor yang akan dihubungi Teknisi</dt>
            <dd class="col-sm-8">${data.Customer.whatsapp}</dd>

            <dt class="col-sm-4">Alamat</dt>
            <dd class="col-sm-8">${data.Customer.alamat}</dd>
            <dt class="col-sm-4">Catatan Anda</dt>
            <dd class="col-sm-8">${data.Customer.catatan}</dd>
            <dt class="col-sm-4">Waktu Kunjungan</dt>
            <dd class="col-sm-8">${data.TanggalKunjungan}  ${data.JamKunjungan}</dd>
        `;
        var layanan = $.map(data.Keranjang, function (item) {
            var scr = "";
            scr = `
                <li class="list-group-item d-flex justify-content-between align-items-center py-3 position-relative">
                    <div class="d-flex align-items-center">
                        <div class="me-3 bg-light rounded-circle d-flex justify-content-center align-items-center" style="width:40px; height:40px;">
                            <i class="bi bi-check text-success"></i>
                        </div>
                        <div>
                            <div class="fw-semibold">${item.nama || '-'}</div>
                            <div class="small text-muted">Qty: <span class="badge bg-secondary">${item.jumlah || 1}</span></div>
                        </div>
                    </div>
                    <div class="text-end">
                        <div class="text-primary fw-bold">
                            Rp ${((item.harga || 1) * (item.jumlah || 1)).toLocaleString()}
                        </div>
                        <div class="small text-muted">
                            harga satuan: <span class="fw-semibold">Rp ${(item.harga || 1).toLocaleString()}</span>
                        </div>
                    </div>
                </li>
            `;
            return scr;
        }).join('');

        var properti = $.map(data.JenisProperti, function (item) {
            var scr = "";
            scr = `
                <li class="list-group-item d-flex justify-content-between align-items-center py-2 position-relative">
                    <div class="d-flex align-items-center">
                        <div class="me-2 bg-light rounded-circle d-flex justify-content-center align-items-center" style="width:30px; height:30px;">
                            <i class="bi bi-check text-success"></i>
                        </div>
                        <div>
                            <div class="fw-semibold">${item.nama_jenis || '-'}</div>
                        </div>
                    </div>
                    <div class="text-end">
                        <div class="text-primary fw-bold">
                            ${formatRupiah(item.harga)}
                        </div>
                    </div>
                </li>
            `;
            return scr;
        }).join('');

        var keluhan = $.map(data.Keluhan, function (item) {
            var scr = "";
            scr = `
                <li class="list-group-item d-flex justify-content-between align-items-center py-2 position-relative">
                    <div class="d-flex align-items-center">
                        <div class="me-2 bg-light rounded-circle d-flex justify-content-center align-items-center" style="width:30px; height:30px;">
                            <i class="bi bi-check text-success"></i>
                        </div>
                        <div>
                            <div class="fw-semibold">${item.val || '-'}</div>
                        </div>
                    </div>
                </li>
            `;
            return scr;
        }).join('');

        var Total = `${formatRupiah(data.Total)}`;

        $('#Customer').html(customer);
        $('#ListLayanan').html(layanan);
        $('#Properti').html(properti);
        $('#Keluhan').html(keluhan);
        $('#Total').html(Total);
        if (data.Id != null && data.Id != 0) {
            $("#IdPesanan").text("Order ID : ACD -" + formatToSixDigits(data.Id || 0));
        }
        else {
            $("#IdPesanan").text("");
        }
        var ChannelPayment = Storage.get("ChannelPayment");
        if(ChannelPayment!=null){
            SetChannelPembayaranV2(ChannelPayment,"");
        }
        else{
            GetChannelPembayaran();
        }

        $('#searchInput').on('keydown', function (e) {
            if (e.key === "Enter") {
                e.preventDefault(); // mencegah submit form jika ada
                let keyword = $(this).val();
                $('#btnCheckout').fadeOut();
                // Panggil fungsi pencarian
                var ChannelPayment = Storage.get("ChannelPayment");
                if(keyword!=""){
                    SetChannelPembayaranV2(ChannelPayment,$("#searchInput").val());
                }
                else{
                    
                    SetChannelPembayaranV2(ChannelPayment,"");
                }
            }
        });

    });

    function GetChannelPembayaran(){
        callApi({
            url: `/api/Tripay/GetPaymentChannelsV2`,
            method: 'GET',
            success: function (res) {
                Storage.set("ChannelPayment",res);
                SetChannelPembayaranV2(res,"");
            },
            error: function (err) {Swal.fire('Gagal!', 'Proses gagal.', 'warning');},
            onBeforeSend: function () {
                $('#channelAccordion').html('<p class="text-center text-muted py-4">sedang memuat data.....</p>');
            },
            onComplete: function () {
            }
        });
    }

    function SetChannelPembayaranV2(res,cari){
        // Grouping berdasarkan "group"
        if(cari == ""){
            $("#searchInput").val("");
        }
        
        const grouped = {};
        res.forEach(item => {
            if(cari != "")
            {
                let regex = new RegExp(cari, "i"); 
                if(regex.test(item.name)){
                    if (!grouped[item.group]) grouped[item.group] = [];
                    grouped[item.group].push(item);
                }
            }
            else
            {
                if (!grouped[item.group]) grouped[item.group] = [];
                grouped[item.group].push(item);
            }
            
        });
        const accordion = document.getElementById("channelAccordion");
        let idx = 0;
        $('#channelAccordion').html("");
        Object.keys(grouped).forEach(group => {
            const collapseId = `collapse-${idx}`;
            const headerId = `heading-${idx}`;

            const items = grouped[group].map(item => `
                <div class="payment-channel-list">
                    <label class="channel-card">
                        <input type="radio" name="payment_channel" value="${item.code}" class="form-check-input d-none" onclick="checkRadioStatus();"/>
                        <div class="channel-content">
                            <img src="${item.icon_url}" alt="${item.name}" width="80">
                        </div>
                    </label>
                </div>
            `).join("");

            const section = `
                <div class="accordion-item">
                    <h2 class="accordion-header" id="${headerId}">
                        <button class="accordion-button" type="button"
                                data-bs-toggle="collapse" data-bs-target="#${collapseId}" 
                                aria-expanded="${idx === 0}" aria-controls="${collapseId}">
                            ${group}
                        </button>
                    </h2>
                    <div id="${collapseId}" class="accordion-collapse collapse ${cari != '' ? 'show' : '' }" 
                            aria-labelledby="${headerId}" data-bs-parent="#channelAccordion">
                        <div class="accordion-body">
                            ${items}
                        </div>
                    </div>
                </div>
            `;
            accordion.innerHTML += section;
            idx++;
        });
    }

    function checkRadioStatus() {
        if ($('input[name="payment_channel"]:checked').length > 0) {
            $('#btnCheckout').fadeIn();
        } else {
            $('#btnCheckout').fadeOut();
        }
    }

    function Checkout() {
        var user = getUserInfo();
        var Data = getStoragePemesanan();
        
        if (!isValidUser(user)) {
            $("#TitleModalLogin").text("Silahkan login terlebih dahulu");
            $("#btnClsModalLogin").show();
            $('#ModalLogin').modal('show');
        }
        else{
            if (
                Data.Keranjang == null ||
                Data.JenisProperti == null ||
                Data.Keluhan == null ||
                Data.TanggalKunjungan == "" ||
                Data.JamKunjungan == "" ||
                Data.Total == null ||
                Data.Customer == null ||
                Data.id_layanan == null
            ) {
                alert("session Order expired");
                window.location.href = '@Url.Action("Index", "Home")';
            }
            if(Data.Id == null || Data.Id == 0){
                SimpanDulu(0);
            }
            else
            {
                InstruksiBayar(Data);
            }
        }
        
    }

    function SimpanCheckOut(_Data){
        callApi({
            url: "/api/Pemesanan/Checkout",
            method: 'POST',
            data:_Data,
            success: function (res) {
                Storage.set('IdPesanan',res.id);
                Storage.set('NoRefCheckout',_Data.NoRefCheckout);
                window.location.href = '@Url.Action("InstruksiPembayaran", "Pembayaran")';
            },
            error: function (err) {
                Swal.fire('Gagal!', 'Pesanan berhasil gagal dicheckout.', 'warning');
            },
            onBeforeSend : function () {
                $("#btnSimpanDulu").prop("disabled", true).text("Memproses...");
                $("#btnCheckout").prop("disabled", true).text("Memproses...");
            },
            onComplete : function () {
                $("#btnSimpanDulu").prop("disabled", false).text("Simpan Dulu");
                $("#btnCheckout").prop("disabled", false).text("Bayar");
            }
        });  
    }

    function InstruksiBayar(datatrx){
        
        var method = $('input[name="payment_channel"]:checked').val();
        var _order_items = [];
        $.map(datatrx.Keranjang, function (item) {
            var dt = {
                sku : item.id,
                name : item.nama,
                price : item.total,
                quantity : item.jumlah,
            }
            _order_items.push(dt);
        });

        var dataapi =
        {   
            method : method,
            merchant_ref : "ACD-"+formatToSixDigits(datatrx.Id),
            amount: datatrx.Total,
            customer_name : datatrx.Customer.nama,
            customer_email : "rikoaderinanda@gmail.com",
            customer_phone : datatrx.Customer.whatsapp,
            order_items : _order_items,
            callback_url : "",
            return_url: "",
            expired_time: 0,
            signature: ""
        }
        
        callApi({
            url: '/api/Tripay/CreateTransaction',
            method: 'POST',
            data:dataapi,
            success: function (res) {
                if(res.success){
                    datatrx.NoRefCheckout = res.data.reference;
                    SimpanCheckOut(datatrx);
                }
                else{
                    Swal.fire('Gagal!',data.message, 'warning');
                }
            },
            error: function (err) {
                Swal.fire('Gagal!', 'ada kendala dikoneksi anda', 'warning');
            }
        });
    }

    function SimpanDulu(action) {
        var user = getUserInfo();
        var Data = getStoragePemesanan();
        if (!isValidUser(user)) {
            $("#TitleModalLogin").text("Silahkan login terlebih dahulu");
            $("#btnClsModalLogin").show();
            $('#ModalLogin').modal('show');
        }
        else {
            if (
                Data.Keranjang == null ||
                Data.JenisProperti == null ||
                Data.Keluhan == null ||
                Data.TanggalKunjungan == "" ||
                Data.JamKunjungan == "" ||
                Data.Total == null ||
                Data.Customer == null ||
                Data.id_layanan == null 
            ) {
                alert("session Order expired");
                window.location.href = '@Url.Action("Index", "Home")';
            }

            callApi({
                url: '/api/Pemesanan/SimpanDulu',
                method: 'POST',
                data: Data,
                success: function (res) {
                    if(action == 0){
                        Storage.set('IdPesanan',res.id);
                        Data.Id = res.id;
                        InstruksiBayar(Data);
                        return res;
                    }
                    else
                    {
                        Swal.fire({
                            title: '<strong>🎉 Berhasil Disimpan!</strong>',
                            html: 'Pesananmu telah ditambahkan ke keranjang.<br><small>Kamu akan diarahkan ke halaman <b>Keranjang Pesanan</b>.</small>',
                            icon: 'success',
                            showConfirmButton: true,
                            confirmButtonText: 'Lihat Keranjang',
                            customClass: {
                                popup: 'rounded-4 shadow-lg',
                                title: 'fw-bold text-success',
                                confirmButton: 'btn btn-primary px-4 py-2 rounded-pill',
                            },
                            showClass: {
                                popup: 'animate__animated animate__fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        }).then(() => {
                            window.location.href = '@Url.Action("Index", "Cart")';
                        });

                    }
                },
                error: function (err) {
                    alert("Gagal: " + err);
                },
                onBeforeSend: function () {
                    $("#btnSimpanDulu").prop("disabled", true).text("Memproses...");
                    $("#btnCheckout").prop("disabled", true).text("Memproses...");
                },
                onComplete: function () {
                    $("#btnSimpanDulu").prop("disabled", false).text("Simpan Dulu");
                    $("#btnCheckout").prop("disabled", false).text("Bayar");
                }
            });
        }
    }

    function editCustomer() {
        var data = getStoragePemesanan();
        if (data.Customer != null) {
            window.location.href = '@Url.Action("Index", "CustomerInfo")';
        }
        else {
            alert("session Order expired");
            window.location.href = '@Url.Action("Index", "Home")';
        }

    }

    function editLayanan() {
        var data = getStoragePemesanan();
        if (
            data.Keranjang == null ||
            data.JenisProperti == null ||
            data.Keluhan == null ||
            data.TanggalKunjungan == "" ||
            data.JamKunjungan == "" ||
            data.Total == null
        ) {
            Swal.fire({
                icon: 'warning',
                title: 'Session Order Expired',
                text: 'Anda akan diarahkan kembali ke halaman utama.',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = '@Url.Action("Index", "Home")';
            });
        }
        else {
            window.location.href = '@Url.Action("Index", "Layanan")/' + data.id_layanan;
        }

    }

    function CloseModalLogin() {
        //window.location.href = '@Url.Action("Index", "Home")';
        $('#ModalLogin').modal('hide');
    }

</script>
