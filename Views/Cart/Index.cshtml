@{
    ViewData["Title"] = "Status";
    ViewData["Header"] = "2";
    ViewData["Footer"] = "1";
    ViewData["HeaderName"] = "Keranjang - Pesanan Anda";
    ViewData["SelectedFooter"] = "Cart";
}

<!-- App Body Start -->
<div class="app-body pb-30">
    <div class="container mt-30 mb-30">
        <div class="position-relative">
            <input class="form-input input-shadow ps-5 mb-30" type="text" placeholder="Kamu lagi butuh jasa apa?">
            <i class="bi bi-search search-icon-lg"></i>
        </div>
        <div id="ListPemesanan"></div>
    </div>
</div>
<!-- App Body End -->

<script>
    var $;
    document.addEventListener('DOMContentLoaded', function () {
        if (typeof window.jQuery === 'undefined') {
            console.error('jQuery is not loaded.');
            return;
        }
        $ = window.jQuery;
        LoadListCart();

    });

    function LoadListCart() {
        callApi({
            url: '/api/Pemesanan/GetPemesanan',
            method: 'GET',
            success: function (data) {
                @* console.log('Data:', data); *@
                var html = $.map(data, function (item) {
                    var dtPesanan = '';
                    item.Pesanan.forEach(p => {
                        dtPesanan = dtPesanan +
                            `
                                <li>
                                    ${p.nama} &times; ${p.jumlah}
                                    <span class="text-muted">(${formatRupiah(p.total)})</span>
                                </li>
                            `
                            ;
                    });
                    var dtProperti = '';
                    item.Properti.forEach(p => {
                        dtPesanan = dtPesanan +
                            `
                                <li>
                                    Biaya Properti ${p.nama_jenis}
                                    <span class="text-muted">(${formatRupiah(p.total)})</span>
                                </li>
                            `
                            ;
                    });
                    var scr = "";
                    scr = `
                        <div class="card mb-3 position-relative shadow-sm border-0">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start position-relative">
                                    <div>
                                        <h5 class="card-title mb-1 fw-bold">
                                            ID Pesanan: 
                                            <span class="text-primary">
                                                ACD - ${formatToSixDigits(item.id)}
                                            </span>
                                        </h5>
                                        <p class="card-text mb-2">
                                            Total Pesanan: 
                                            <span class="fw-semibold text-success">
                                                Rp ${formatRupiah(item.total)}
                                            </span>
                                        </p>

                                        <div class="mt-3">
                                            <strong>Detail Order:</strong>
                                            <ul class="mb-0 ps-0" style="list-style-type:disc;font-size:small;">
                                                ${dtPesanan}
                                            </ul>
                                        </div>
                                    </div>

                                    <!-- Tombol Delete -->
                                    <button 
                                        onclick="DeletePesanan(${item.id});"
                                        class="btn btn-outline-danger btn-sm"
                                        title="Hapus Pesanan"
                                        style="position: absolute; top: 10px; right: 54px; border-radius: 50%; width: 28px; height: 28px; display: flex; align-items: center; justify-content: center;">
                                        <i class="bi bi-trash" style="font-size: 1.0rem;"></i>
                                    </button>

                                    <!-- Tombol Detail -->
                                    <button 
                                        onclick="DetailPesanan(${item.id});"
                                        class="btn btn-outline-primary btn-sm"
                                        title="Lihat Detail Status"
                                        style="position: absolute; top: 10px; right: 10px; border-radius: 50%; width: 28px; height: 28px; display: flex; align-items: center; justify-content: center;">
                                        <i class="bi bi-arrow-right" style="font-size: 1.0rem;"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                    return scr;
                }).join('');

                $('#ListPemesanan').html(html);
            },
            error: function (err) {
                alert('Error: ' + err);
            }
        });
    }
    function DetailPesanan(Id) {
        callApi({
            url: '/api/Pemesanan/GetPemesananById?id=' + Id,
            method: 'GET',
            success: function (data) {
                console.log(data);
                data.forEach(item => {
                    Storage.set('keranjang', item.Pesanan);
                    Storage.set('keluhan', item.Keluhan);
                    Storage.set('jenis_properti', item.Properti);
                    Storage.set('TanggalKunjungan', item.tanggal_kunjungan);
                    Storage.set('JamKunjungan', item.jam_kunjungan);
                    Storage.set('Total', item.total);
                    Storage.set('id_layanan', item.id_layanan)
                    let dataCustomer = {
                        "nama": item.nama,
                        "whatsapp": item.whatsapp,
                        "catatan": item.catatan,
                        "lokasi": item.lokasi,
                        "alamat": item.alamat
                    }
                    Storage.set('Customer', dataCustomer);
                    Storage.set('IdPesanan', Id);
                });



                var res = getStoragePemesanan();
                if (res != null) {
                    window.location.href = '@Url.Action("Index", "Pembayaran")';
                }
                //console.log(res);
                @* var JenisProperti = Storage.get('jenis_properti') || [];
                var Keluhan = Storage.get('keluhan') || [];
                var TanggalKunjungan = Storage.get('TanggalKunjungan') || '';
                var JamKunjungan = Storage.get('JamKunjungan') || '';
                var Total = Storage.get('Total') || 0;
                var Customer = Storage.get('Customer') || [];  *@
            },
            error: function (err) {
                alert('Error: ' + err);
            }
        })
    }

    function DeletePesanan(IdPemesanan) {
        Swal.fire({
            title: 'Yakin hapus pesanan ini?',
            text: "Tindakan ini tidak bisa dibatalkan!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Ya, hapus!',
            cancelButtonText: 'Batal'
        }).then((result) => {
            if (result.isConfirmed) {
                callApi({
                    url: '/api/Pemesanan/HapusPemesanan',
                    method: 'POST',
                    data: {
                        Id: IdPemesanan
                    },
                    success: function (data) {
                        Swal.fire('Dihapus!', 'Pesanan berhasil dihapus.', 'success');
                        LoadListCart();
                    },
                    error: function (err) {
                        alert('Error: ' + err);
                        Swal.fire('Gagal!', 'Pesanan berhasil gagal dihapus.', 'warning');
                        LoadListCart();
                    }
                })
            }
        });
    }
</script>
